% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/direction_abs.R, R/track_methods.R
\name{direction}
\alias{direction}
\alias{direction_abs}
\alias{direction_abs.track_xy}
\alias{direction_rel}
\alias{direction_rel}
\title{Directions}
\usage{
direction_abs(x, ...)

\method{direction_abs}{track_xy}(x, degrees = TRUE, full_circle = FALSE,
  zero_dir = "E", clockwise = FALSE, append_last = TRUE, planar = TRUE,
  ...)

direction_rel(x, degrees = TRUE)

direction_rel(x, degrees = TRUE)
}
\arguments{
\item{x}{A track.}

\item{degrees}{Logcial scalar, if \code{TRUE} angles are returned in degrees, otherwise in radians.}

\item{full_circle}{Logcial scalar, if \code{TRUE} angles are returned between 0 and 360 degrees or 0 and 2 pi (depnding on the value of \code{degrees}), otherwise angles are between -180 and 180 or -pi and pi.}

\item{zero_dir}{Character scalar, must be either 'N', 'E', 'S' or 'W' and indicates the zero direction.}

\item{clockwise}{Logical scalar, should angles be calculated clock or anti-clockwise.}

\item{append_last}{Logical scalar, if \code{TRUE} an \code{NA} is appended at the end of all angles.}
}
\description{
Functions to calculate the relative and absolute direction of an animal
}
\examples{
# Absolute directions

x <- c(1, 4, 8, 8, 12, 8, 0, 0, 4, 2)
y <- c(0, 0, 0, 8, 12, 12, 12, 8, 4, 2)
trk <- track(x = x, y = y)

# append last
direction_abs(trk, append_last = TRUE)
direction_abs(trk, append_last = FALSE)

# degrees
direction_abs(trk, degrees = FALSE)
direction_abs(trk, degrees = TRUE)

# full circle or not
direction_abs(trk, degrees = TRUE, full_circle = TRUE)
direction_abs(trk, degrees = TRUE, full_circle = FALSE)

# direction of 0
direction_abs(trk, full_circle = TRUE, zero_dir = "N")
direction_abs(trk, full_circle = TRUE, zero_dir = "E")
direction_abs(trk, full_circle = TRUE, zero_dir = "S")
direction_abs(trk, full_circle = TRUE, zero_dir = "W")

# clockwise or not
direction_abs(trk, full_circle = TRUE, zero_dir = "N", clockwise = FALSE)
direction_abs(trk, full_circle = TRUE, zero_dir = "N", clockwise = TRUE)

# Bearing (i.e. azimuth): only for lon/lat
direction_abs(trk, full_circle = FALSE, zero_dir = "N", planar = TRUE, clockwise = TRUE)
direction_abs(trk, full_circle = FALSE, zero_dir = "N", planar = FALSE, clockwise = TRUE)

# How do results compare to other packages

# adehabitatLT
df <- adehabitatLT::as.ltraj(data.frame(x = x, y = y), typeII = FALSE, id = 1)
df[[1]]$abs.angle
amt::direction_abs(trk, degrees = FALSE, full_circle = FALSE)

# bcpa
df <- bcpa::MakeTrack(x, y, now() +  hours(1:10))
bcpa::GetVT(df)$Phi
amt::direction_abs(trk, degrees = FALSE, full_circle = FALSE, append_last = FALSE)

# move
m <- move::move(x, y, now() + hours(1:10), proj = CRS("+init=epsg:4326"))
move::angle(m)
amt::direction_abs(trk, degrees = TRUE, full_circle = FALSE, zero_dir = "N", clockwise = TRUE, append_na = FALSE, planar = FALSE)

# trajectories
library(trajectories)
library(spacetime)
t1 <- Track(STIDF(SpatialPoints(cbind(x, y)), now() + hours(1:10), data = data.frame(1:10)))

t1[["direction"]]
direction_abs(trk, degrees = TRUE, full_circle = TRUE, zero_dir = "N", clockwise = TRUE, append_last = FALSE)

# moveHMM (only rel. ta)
df <- data.frame(ID = 1, x = x, y = y)
moveHMM::prepData(df, type = "UTM")
}
